extends layout/layout.pug

block script
    script(src='/js/app/classroom.js')
    script(src='/easy-autocomplete/dist/jquery.easy-autocomplete.min.js')
    link(rel='stylesheet', href='/easy-autocomplete/dist/easy-autocomplete.min.css')
    link(rel='stylesheet' href='/css/main.css')
    script(type='text/javascript').
      const options = {}
      $.ajax({
        url: '/api/usernames',
        success: function (result) {
          options.data = result
          console.log('options : ' + options)
        }
      })
      $(document).ready(function () {
        $('#settings-modal').modal({
          closable: false,
          transition: 'fade up',
          onApprove : function() {
            //$('.ui.form').submit();
            return false;
          },
        })
        $('#alert-modal').modal({
          closable: false,
          transition: 'fade up',
        })
        $('.newProject').click(function () {
          $('#newProject-modal').modal('show');
        });
        $('.main-menu').click(function () {
          showMainContainer()
        });
        $('.students-menu').click(function () {
          showStudentContainer()
        });
        $('.pairs-menu').click(function () {
          showPairingDateTimeContainer()
        });
        $('.settings-menu').click(function () {
          var day = '!{section.day}'
          var time_start = '!{section.time_start}'
          var time_end = '!{section.time_end}'
          var time_start_hh = time_start[0] + time_start[1]
          var time_start_mm = time_start[3] + time_start[4]
          var time_start_ap = time_start[5] + time_start[6]
          var time_end_hh = time_end[0] + time_end[1]
          var time_end_mm = time_end[3] + time_end[4]
          var time_end_ap = time_end[5] + time_end[6]
          $('.day option[value=\'' + day + '\']').attr('selected', 'selected');
          $('.timeStartHh option[value=' + time_start_hh + ']').attr('selected', 'selected');
          $('.timeStartMm option[value=' + time_start_mm + ']').attr('selected', 'selected');
          $('.timeStartAp option[value=' + time_start_ap + ']').attr('selected', 'selected');
          $('.timeEndHh option[value=' + time_end_hh + ']').attr('selected', 'selected');
          $('.timeEndMm option[value=' + time_end_mm + ']').attr('selected', 'selected');
          $('.timeEndAp option[value=' + time_end_ap + ']').attr('selected', 'selected');
          $('.ui.form').trigger('reset');
          $('.ui.form .field.error').removeClass('error');
          $('.ui.form.error').removeClass('error');
          $('#settings-modal').modal('show');
        });
        $('.ui.form.updateSection').form({
          fields: {
            course_name: {
              identifier: 'course_name',
              rules: [
                {
                  type   : 'empty',
                  prompt : 'Please enter your course name'
                },
                {
                  type : 'regExp[[a-zA-Z0-9]]',
                  prompt : 'This course name is not valid!'
                }
              ]
            },
            section: {
              identifier: 'section',
              rules: [
                {
                  type   : 'empty',
                  prompt : 'Please enter your section'
                },
                {
                  type : 'regExp[[0-9]]',
                  prompt : 'This section is not valid!'
                }
              ]
            },
            room: {
              identifier: 'room',
              rules: [
                {
                  type   : 'empty',
                  prompt : 'Please enter your room'
                }
              ]
            }
          },
          onSuccess : function() {
            $('#newClassroom-modal').modal('hide');
          },
        })
        $('#students-container').hide();
        $('#pairing-date-time-container').hide();
        $('.newPairingDateTime').click(function () {
          var date_time = new Date()
          var str_date_time = date_time.toString()
          var split_date_time = str_date_time.split(' ')
          var slice_date_time = split_date_time.slice(0, 5)
          date_time = slice_date_time.join(' ')
          $('#date_time').attr('value', date_time)
          $('#pairingDateTime-modal').modal('show');
        });
        $('#createPairingDateTime').click(function () {
          const date_time = $('#date_time').attr('value')
          const section_id = $('#section_id').attr('value')
          const status = $(this).attr('value')
          const parameters = {date_time: date_time, section_id: section_id}
          $.get('classroom/getPairingDateTime',parameters,function(data){
            if(status <= 0){
              var pairingTime = data.pairingTime;
              if(status < 0) {
                pairingTime = 1
              } else pairingTime++
              $.ajax({
                url: '/api/createPairingDateTime',
                type: 'post',
                data: parameters,
                success: function (res) {
                  if (typeof res.pairing_date_time_id == 'number') {
                    var item = $('<div id=\'pairing' + res.pairing_date_time_id + '\' class=\'item\' style=\'padding-top:10px; padding-bottom:10px; padding-left:15px; padding-right:15px;\'></div>')
                    var content = $('<div class=\'content\'></div>')
                    var grid = $('<div class=\'ui grid\'></div>')
                    var extra = $('<div class=\'extra\'><div id=\'status\' class=\'ui label\' style=\'background-color:#f1c232; color:white;\'>PENDING</div></div>')
                    var elevenColumn = $('<div class=\'eleven wide column\'><b style=\'font-size:1.2em\'><header class=\'header-pending-and-active\'>Pairing Time : ' + pairingTime + '</header></b><div class=\'description\'><font class=\'font-pending-and-active\'>' + res.date_time + '</font></div></div>')
                    var fiveColumn = $('<div id=\'pairing-button-column\' class=\'five wide column\'><div class=\'ui top right floated pointing dropdown button blue\'><font color=\'white\'>Select</font><div class=\'menu\'><div class=\'item pair-or-view\' value=\'Pair\'> Pair </div><div class=\'item pairing-status\' id=\''+res.pairing_date_time_id+'\' value=\'Active\'>Active</div></div></div></div>')
                    grid.append(elevenColumn)
                    grid.append(fiveColumn)
                    content.append(grid)
                    content.append(extra)
                    item.append(content)
                    $('#pairingDateTime').prepend(item)
                    $('.ui.pointing.dropdown').dropdown();
                    $('.pairing-status').click(function(){
                      onPairingStatusOptionClick()
                    })
                    $('.pair-or-view').click(function () {
                      if($(this).attr('value') == 'Pair'){
                        //showStudentList()
                      } else {
                        alert('View')
                      }
                    })
                    //showStudentList()
                    $('#createPairingDateTime').attr('value', 1)
                  }
                }
              })

            } else $('#alert-modal').modal('show')
          })
        })
        $('.removeStudent').click(function () {
          $('#messageConfirm').text('Are you sure to remove \"' + $(this).attr('name') + '\" from the classroom?')
          $('.enrollment_id').attr('value', $(this).attr('id'))
          $('.student_id').attr('value', $(this).attr('value'))
          $('#confirmRemoveStudent').modal('show');
        });
        $('.yesIamSure').click(function (e) {
          var enrollment_id = $('.enrollment_id').attr('value')
          $.ajax({
            url: '/api/removeStudent',
            type: 'delete',
            data: {
              enrollment_id
            },
            success: function (res) {
              if(res.status == 'Remove the student from the classroom complete.') {
                $('#' + $('.student_id').attr('value')).remove()
              } else {
                alert(res.status)
              }
            }
          })
        })
      });
      function showMainContainer() {
        $('#main-container').show();
        $('#students-container').hide();
        $('#pairing-date-time-container').hide();
      }
      function showStudentContainer(){
        $('#main-container').hide();
        $('#students-container').show();
        $('#pairing-date-time-container').hide();
      }
      function showPairingDateTimeContainer(){
        $('#main-container').hide();
        $('#students-container').hide();
        $('#pairing-date-time-container').show();
      }
    style.
      @media (min-height: 200px) {
      .ui.footer.form-page { /* Increased specificity for SO snippet priority */
      position: absolute;
      width: 100%;
      }
      }

block content
    input#section_id(type='hidden', value=`${section.section_id}`)
    +pairStudent(user, students)
    .ui.small.modal#newProject-modal
      i.close.icon
      .header Create New Project
      .content
        form.ui.form(action='/project', method='POST')
          .field
            label Project Name :
            |
            input(type='text', name='title', placeholder='Your Project Name')
          .field
            label Description :
            |
            input(type='text', name='description', placeholder='Something about your project')
          .content
            .ui.grid
              .six.wide.column
                .field
                  label Language :
                  select.ui.dropdown(name='language')
                    option(value='0') Python
              .six.wide.column
                .field
                  label Buddy ID :
                  |
                  input(type='hidden' name='creator_id' value=user._id)
                  input(type='hidden' name='creator' value=user.username)
                  input#collaborator-hidden(type='hidden' name='collaborator')
                  input#collaborator(type='text',name='collaborator', placeholder='Search users...', disabled)
              .four.wide.column
                  button.ui.positive.labeled.icon.button(id='add-collaborator' type='button')
                    i.user.icon
                    |  Add
          .field
            label Time  :
            select.ui.dropdown(name='swaptime')
               option(value='15') 15 minutes (Recommended)
               option(value='10') 10 minutes
               option(value='5') 5 minutes
               option(value='1') 1 minute
            input(type='hidden' name='status' value="pending")

          .ui.basic.center.aligned.segment()
            .actions
              button.ui.button.approve.green(type='submit') Create
              .ui.button.approve.red(data-value='cancel') Cancel

    .ui.small.modal#confirmRemoveStudent
      i.close.icon
      .header Remove Student
      .content
        p#messageConfirm Are you sure to remove the student from the classroom?
        input.enrollment_id(type='hidden', name='enrollment_id')
        input.student_id(type='hidden', name='student_id')
        .ui.basic.center.aligned.segment
          .actions
            button.ui.button.approve.green.yesIamSure Yes
            .ui.button.cancel.red.noIamNotSure No

    .ui.small.modal#pairingDateTime-modal
      i.close.icon
      .header Pairing Date Times
      .content
        .ui.fluid.action.input
          input#date_time(type='text', name='date_time')
          .ui.button.approve.blue#createPairingDateTime(value='' + pairingDateTimes[0].status)
            b(style='font-size:1.2em;') Create

    .ui.small.modal#alert-modal
      i.close.icon
      .header Alert!
      .content
        p#alert-message Something content
        .ui.basic.center.aligned.segment
          .actions
            button.ui.button.cancel.green(data-value='cancel') OK

    //.ui.small.modal#confirm-modal
    //  .header Alert!
    //  .content
    //    p#confirm-message Something message
    //    .ui.basic.center.aligned.segment
    //      .actions
    //        button.ui.button.approve.green#confirm-button Confirm
    //        .ui.button.cancel.green#cancel-button Cancel


    .ui.small.modal#settings-modal
      i.close.icon
      .header Settings Classroom
      .content
        form.ui.form.updateSection.segment(action='/classroom/updateSection', method='POST')
          .field
            label Class Name :
            |
            input(type='text', name='course_name', placeholder='Your class name', value=`${section.course_name}`)
          .ui.grid
            .two.column.row
              .column
                .field
                  label Section :
                  |
                  input(type='text', name='section', placeholder='Your section', maxlength='2', value=`${section.section}`)
              .column
                .field
                  label Room :
                  |
                  input(type='text', name='room', placeholder='Your room', maxlength='4', value=`${section.room}`)
          .ui.grid
            .four.wide.column
              .field
                label Day  :
                select.ui.dropdown.day(name='day')
                   option(value='Mon.') Monday
                   option(value='Tue.') Tuesday
                   option(value='Wed.') Wednesday
                   option(value='Thu.') Thursday
                   option(value='Fri.') Friday
                   option(value='Sat.') Saturday
                   option(value='Sun.') Sunday
            .six.wide.column(style='text-align:center;')
              b Time start
              .ui.labeled.input
                select.ui.dropdown.timeStartHh(name='time_start_hh')
                  option(value='00')  00
                  option(value='01')  01
                  option(value='02')  02
                  option(value='03')  03
                  option(value='04')  04
                  option(value='05')  05
                  option(value='06')  06
                  option(value='07')  07
                  option(value='08')  08
                  option(value='09')  09
                  option(value='10')  10
                  option(value='11')  11
                  option(value='12')  12
                .ui.label
                  b(color='black') :
                select.ui.dropdown.timeStartMm(name='time_start_mm')
                  option(value='00')  00
                  option(value='05')  05
                  option(value='10')  10
                  option(value='15')  15
                  option(value='20')  20
                  option(value='25')  25
                  option(value='30')  30
                  option(value='35')  35
                  option(value='40')  40
                  option(value='45')  45
                  option(value='50')  50
                  option(value='55')  55
                select.ui.dropdown.timeStartAp(name='time_start_ap')
                  option(value='am.')  am.
                  option(value='pm.')  pm.
            .six.wide.column(style='text-align:center;')
              b Time end
              .ui.labeled.input
                select.ui.dropdown.timeEndHh(name='time_end_hh')
                  option(value='00')  00
                  option(value='01')  01
                  option(value='02')  02
                  option(value='03')  03
                  option(value='04')  04
                  option(value='05')  05
                  option(value='06')  06
                  option(value='07')  07
                  option(value='08')  08
                  option(value='09')  09
                  option(value='10')  10
                  option(value='11')  11
                  option(value='12')  12
                .ui.label
                  b(color='black') :
                select.ui.dropdown.timeEndMm(name='time_end_mm')
                  option(value='00')  00
                  option(value='05')  05
                  option(value='10')  10
                  option(value='15')  15
                  option(value='20')  20
                  option(value='25')  25
                  option(value='30')  30
                  option(value='35')  35
                  option(value='40')  40
                  option(value='45')  45
                  option(value='50')  50
                  option(value='55')  55
                select.ui.dropdown.timeEndAp(name='time_end_ap')
                  option(value='am.')  am.
                  option(value='pm.')  pm.
          input(type='hidden', name='course_id', value=`${section.course_id}`)
          input(type='hidden', name='section_id', value=`${section.section_id}`)
          .ui.basic.center.aligned.segment
            .actions
              button.ui.button.approve.green(type='submit') Update
              .ui.button.cancel.red(data-value='cancel') Cancel
          .ui.error.message

    .ui.raised.very.padded.container
      .ui.centered.grid(style='padding-top:20px;')
        +detailSection(sections, occupation)
        .ten.wide.column#main-container
          .ui.segment
            .ui.two.column.doubling.stackable.grid.container(style='padding-top:20px; margin-bottom:20px;')
              .column
                case occupation
                  when 0
                    h1.ui.header#headerContainer Assignments
                  default
                    h1.ui.header#headerContainer My Projects
              .right.column
                a.right
                  case occupation
                    when 0
                      button#new.ui.button.approve.green.newAssignment(style='float: right;') Create New Assignment
                    default
                      button#new.ui.button.approve.green.newProject(style='float: right;') Create New Project

        .ten.wide.column#pairing-date-time-container
          .ui.segment
            .ui.three.column.doubling.stackable.grid.container(style='padding-top:20px; margin-bottom:20px;')
              .column
                h1.ui.header#headerContainer Pairing Date Time
              .column
                .ui.button.approve.teal#resetPair-button Reset Pair
              .right.column
                a.right
                  button#new.ui.button.approve.green.newPairingDateTime(style='float: right;') Create Pairing Date Time
            .ui.divided.items#pairingDateTime
              if pairingDateTimes.length > 0 && pairingDateTimes[0].status >= 0
                each pairingDateTime, index in pairingDateTimes
                  .item(id=`${pairingDateTime.pairing_date_time_id}`, style='padding-top:10px; padding-bottom:10px; padding-left:15px; padding-right:15px;')
                    .content
                      .ui.grid
                        .eleven.wide.column
                          b(style='font-size:1.2em;')
                            case pairingDateTime.status
                              when 0
                                header(style='color:#5D5D5D;') Pairing Time : !{pairingTimes - index}
                              default
                                header.header-pending-and-active Pairing Time : !{pairingTimes - index}
                          .description
                            case pairingDateTime.status
                              when 0
                                font(color='#5D5D5D') !{pairingDateTime.date_time}
                              default
                                font.font-pending-and-active !{pairingDateTime.date_time}
                        .five.wide.column#pairing-button-column
                          case pairingDateTime.status
                            when 0
                              .ui.right.floated.alignedvertical.animated.viewStudentPairing.button(value=`${pairingDateTime.pairing_date_time_id}`)
                                .hidden.content(style='color:#5D5D5D;') View
                                .visible.content
                                  i.eye.icon
                            default
                              .ui.top.right.floated.pointing.dropdown.button.blue
                                font(color='white') Select
                                .menu
                                  case pairingDateTime.status
                                    when 1
                                      .item.pair-or-view(value='Pair') Pair
                                    default
                                      .item.pair-or-view(value='View') View
                                  case pairingDateTime.status
                                    when 1
                                      .item.pairing-status(id=`${pairingDateTime.pairing_date_time_id}`, value='Active') Active
                                    when 2
                                      .item.pairing-status(id=`${pairingDateTime.pairing_date_time_id}`, value='Inactive') Inactive
                              script(type='text/javascript').
                                $('.ui.pointing.dropdown').dropdown();
                                $('.pairing-status').click(function(){
                                  onPairingStatusOptionClick()
                                })
                      .extra
                        case pairingDateTime.status
                          when 0
                            .ui.label#status(style='background-color:#E8E8E8; color:#665D5D;') INACTIVE
                          when 1
                            .ui.label#status(style='background-color:#f1c232; color:white;') PENDING
                          when 2
                            .ui.label#status(style='background-color:#16AB39; color:white;') ACTIVE

        .ten.wide.column#students-container
          .ui.segment
            .ui.two.column.doubling.stackable.grid.container(style='padding-top:20px; margin-bottom:20px;')
              .column
                h1.ui.header#headerContainer Students
            .ui.middle.aligned.divided.list.studentList
              if students.length > 0
                each student in students
                  .item(id=`${student.student_id}`, style='padding-left:15px; padding-right:15px;')
                    .right.floated.content
                      case occupation
                        when 0
                          a.ui.right.floated.alignedvertical.animated.removeStudent.button.red(id=`${student.enrollment_id}`, name=`${student.first_name}` + ' ' + `${student.last_name}`, value=`${student.student_id}`)
                            .hidden.content(style='color:white;') Remove
                            .visible.content
                              i.sign.out.icon
                    img.ui.avatar.image(src='images/user_img_0.jpg')
                    .content
                      p !{student.first_name} !{student.last_name}
