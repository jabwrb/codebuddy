extends layout/layout.pug

block script
    script(src='/js/app/dashboard.js')
    script(src='/easy-autocomplete/dist/jquery.easy-autocomplete.min.js')
    link(rel='stylesheet', href='/easy-autocomplete/dist/easy-autocomplete.min.css')
    link(rel='stylesheet' href='/css/main.css')
    script(type='text/javascript').
      const options = {}
      $.ajax({
        url: '/api/usernames',
        success: function (result) {
          options.data = result
          console.log('options : ' + options)
        }
      })
      $(document).ready(function () {
        $('.newProject').click(function () {
          $('#newProject-modal').modal('show');
        });
        $('.main').click(function () {
          $('#main').show();
          $('#students').hide();
        });
        $('.students').click(function () {
          $('#main').hide();
          $('#students').show();
        });
        $('.pairs').click(function () {
          $('#pairs-modal').modal('show');
        });
        $('.settings').click(function () {
          $('#settings-modal').modal('show');
        });
        $('#students').hide();
        $('.removeStudent').click(function () {
          $('#messageConfirm').text('Are you sure to remove \"' + $(this).attr('name') + '\" from the classroom?')
          $('.enrollment_id').attr('value', $(this).attr('id'))
          $('.student_id').attr('value', $(this).attr('value'))
          //$('#form1').attr('action', $('#form1').attr('action') + 'student_id=' + $('this').attr('id') + '&section_id=' + !{section.section_id})
          $('#confirmRemoveStudent').modal('show');
        });
        $('.yesIamSure').click(function (e) {
          var enrollment_id = $('.enrollment_id').attr('value')
          $.ajax({
            url: '/api/removeStudent',
            type: 'post',
            data: {
              enrollment_id
            },
            success: function (res) {
              if(res.status == 'Remove the student from the classroom complete.') {
                $('#' + $('.student_id').attr('value')).remove()
              } else {
                alert(res.status)
              }
            }
          })
        })
      });
    style.
      @media (min-height: 200px) {
      .ui.footer.form-page { /* Increased specificity for SO snippet priority */
      position: absolute;
      width: 100%;
      }
      }

block content
    .ui.small.modal#newProject-modal
      i.close.icon
      .header Create New Project
      .content
        form.ui.form(action='/project', method='POST')
          .field
            label Project Name :
            |
            input(type='text', name='title', placeholder='Your Project Name')
          .field
            label Description :
            |
            input(type='text', name='description', placeholder='Something about your project')
          .content
            .ui.grid
              .six.wide.column
                .field
                  label Language :
                  select.ui.dropdown(name='language')
                    option(value='0') Python
              .six.wide.column
                .field
                  label Buddy ID :
                  |
                  input(type='hidden' name='creator_id' value=user._id)
                  input(type='hidden' name='creator' value=user.username)
                  input#collaborator-hidden(type='hidden' name='collaborator')
                  input#collaborator(type='text',name='collaborator', placeholder='Search users...', disabled)
              .four.wide.column
                  button.ui.positive.labeled.icon.button(id='add-collaborator' type='button')
                    i.user.icon
                    |  Add
          .field
            label Time  :
            select.ui.dropdown(name='swaptime')
               option(value='15') 15 minutes (Recommended)
               option(value='10') 10 minutes
               option(value='5') 5 minutes
               option(value='1') 1 minute
            input(type='hidden' name='status' value="pending")

          .ui.basic.center.aligned.segment()
            .actions
              button.ui.button.approve.green(type='submit') Create
              .ui.button.approve.red(data-value='cancel') Cancel

    .ui.small.modal#confirmRemoveStudent
      i.close.icon
      .header Remove Student
      .content
        // form.ui.form(id='form1', action='/classroom/removeStudent', method='POST')
        p#messageConfirm Are you sure to remove the student from the classroom?
        input.enrollment_id(type='hidden', name='enrollment_id')
        input.student_id(type='hidden', name='student_id')
        .ui.basic.center.aligned.segment
          .actions
            button.ui.button.approve.green.yesIamSure Yes
            .ui.button.approve.red.noIamNotSure No

    .ui.longer.modal#pairs-modal
      i.close.icon
      .red.inverted.header Pairs
      .content

    .ui.small.modal#settings-modal
      i.close.icon
      .red.inverted.header Settings Classroom
      .content
        form.ui.form(action='/classroom', method='POST')
          .field
            label Class Name :
            |
            input(type='text', name='course_name', placeholder='Your class name', maxlength='100', pattern='[A-Z].{2,100}', title='Must class name is upper case')
          .ui.grid
            .two.column.row
              .column
                .field
                  label Section :
                  |
                  input(type='text', name='section', placeholder='Your section', maxlength='2', pattern='[0-9]{1,2}', title='Must 0-9')
              .column
                .field
                  label Room :
                  |
                  input(type='text', name='room', placeholder='Your room', maxlength='4', pattern='[A-Za-z0-9].{1,4}')
          .ui.grid
            .six.wide.column
              .field
                label Date  :
                select.ui.dropdown(name='day')
                   option(value='Mon.') Monday
                   option(value='Tue.') Tuesday
                   option(value='Wed.') Wednesday
                   option(value='Thu.') Thursday
                   option(value='Fri.') Friday
                   option(value='Sat.') Saturday
                   option(value='Sun.') Sunday
            div#datepair
              .five.wide.column
                .field
                  label Time start  :
                  input(type="text", class="time start", name="time_start", autocomplete="off", maxlength="7", pattern="[0-9]?[0-9]{1}:{1}[0-9]{1}[0-9]{1}[ap]{1}m{1}", title="eg., 12:00pm", placeholder='Time start')
              .five.wide.column
                .field
                  label Time end :
                  input(type="text", class="time end", name="time_end", autocomplete="off", maxlength="7", pattern="[0-9]?[0-9]{1}:{1}[0-9]{1}[0-9]{1}[ap]{1}m{1}", title="eg., 12:00pm", placeholder='Time end')
          .ui.basic.center.aligned.segment
            .actions
              button.ui.button.approve.green(type='submit') Create
              .ui.button.approve.red(data-value='cancel') Cancel

    .ui.raised.very.padded.container
      .ui.centered.grid(style='padding-top:20px;')
        .five.wide.column
          .ui.segments
            .ui.red.inverted.segment
              .item
                .content
                  b(style='font-size:1.2em;')
                    header= section.course_name
                  .description
                    p   Section !{section.section} Room !{section.room}
                    p   !{section.day} !{section.time_start}. - !{section.time_end}.
            .ui.segment
              .ui.items
                .item
                  .content
                    .description
                      case occupation
                        when 0
                          p
                            i.book.icon
                            button.btn.main Assignments
                        default
                          p
                            i.file.icon
                            button.btn.main Projects
                .item
                  .content
                    .description
                      p
                        i.student.icon
                        button.btn.students Students
                case occupation
                  when 0
                    .item
                      .content
                        .description
                          p
                            i.sitemap.icon
                            button.btn.pairs Pairs
                case occupation
                  when 0
                    .item
                      .content
                        .description
                          p
                            i.setting.icon
                            button.btn.settings Settings

        .ten.wide.column#main
          .ui.segment
            .ui.two.column.doubling.stackable.grid.container(style='padding-top:20px;')
              .column
                case occupation
                  when 0
                    h1.ui.header#headerContainer Assignments
                  default
                    h1.ui.header#headerContainer My Projects
              .right.column
                a.right
                  case occupation
                    when 0
                      button#new.ui.button.approve.green.newAssignment(style='float: right;') Create New Assignment
                    default
                      button#new.ui.button.approve.green.newProject(style='float: right;') Create New Project

        .ten.wide.column#students
          .ui.segment
            .ui.two.column.doubling.stackable.grid.container(style='padding-top:20px;')
              .column
                h1.ui.header#headerContainer Students

            .ui.items.studentList
              if students.length > 0
                each student in students
                  .item(id=`${student.student_id}`, style='padding-top:2px; padding-bottom:5px;')
                    .content
                      .ui.segment
                        .ui.grid
                          .eleven.wide.column
                            b(style='font-size:1.2em;')
                              header !{student.first_name} !{student.last_name}
                            .description
                              p
                                font(color='blue') STUDENT ID
                          .five.wide.column
                            case occupation
                              when 0
                                a.ui.right.floated.alignedvertical.animated.removeStudent.button(id=`${student.enrollment_id}`, name=`${student.first_name}` + ' ' + `${student.last_name}`, value=`${student.student_id}`)
                                  .hidden.content Remove
                                  .visible.content
                                    i.sign.out.icon
