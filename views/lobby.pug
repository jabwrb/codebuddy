extends layout/layout.pug

block script
    //- script(src='/js/app/dashboard.js')
    script(src='/easy-autocomplete/dist/jquery.easy-autocomplete.min.js')
    script(src='/jquery-timepicker/jquery.timepicker.min.js')
    link(rel='stylesheet', href='/easy-autocomplete/dist/easy-autocomplete.min.css')
    link(rel='stylesheet', href='/jquery-timepicker/jquery.timepicker.css')
    link(rel='stylesheet' href='/css/main.css')

    script(src='/datepair/dist/datepair.js')
    script(src='/datepair/dist/jquery.datepair.js')

    script(type='text/javascript').
      const options = {}
      $.ajax({
        url: '/api/usernames',
        success: function (result) {
          options.data = result
          console.log('Ajax : ' + options)
        }
      })
      $(document).ready(function () {
        $('#newClassroom-modal').modal({
          closable: false,
          transition: 'fade up',
          onApprove : function() {
            //$('.ui.form').submit();
            return false;
          },
        })
        $('.newClassroom').click(function () {
          $('.ui.form').trigger('reset');
          $('.ui.form .field.error').removeClass('error');
          $('.ui.form.error').removeClass('error');
          $('#newClassroom-modal').modal('show');
        });
        $('.joinClassroom').click(function () {
          $('#joinClassroom-modal').modal('show');
        });
        $('.ui.form').form({
          fields: {
            course_name: {
              identifier: 'course_name',
              rules: [
                {
                  type   : 'empty',
                  prompt : 'Please enter your course name'
                },
                {
                  type : 'regExp[[a-zA-Z0-9]]',
                  prompt : 'This course name is not valid!'
                }
              ]
            },
            section: {
              identifier: 'section',
              rules: [
                {
                  type   : 'empty',
                  prompt : 'Please enter your section'
                },
                {
                  type : 'regExp[[0-9]]',
                  prompt : 'This section is not valid!'
                }
              ]
            },
            room: {
              identifier: 'room',
              rules: [
                {
                  type   : 'empty',
                  prompt : 'Please enter your room'
                }
              ]
            }
          },
          onSuccess : function() {
            $('#newClassroom-modal').modal('hide');
          },
        })
      });
      function onClickDeleteSection(section_id, course_name, section) {
        $('#messageConfirm').text('Are you sure to delete a ' + course_name + ' course in section ' + section + ' from the system?')
        $('.section_id').attr('value', section_id)
        $('#confirmDeleteSection').modal('show');
      }
      function onClickYes(){
        const section_id = $('.section_id').attr('value');
        $.ajax({
          url: '/api/deleteSection',
          type: 'delete',
          data: {
            section_id
          },
          success: function (res) {
            if(res.status == 'Delete the section complete.') {
              $('#' + section_id).remove()
            } else {
              alert('Delete the section fail.')
            }
          }
        })
      }


    style.
      @media (min-height: 200px) {
      .ui.footer.form-page { /* Increased specificity for SO snippet priority */
      position: absolute;
      width: 100%;
      }
      }

block content
    .ui.small.modal#newClassroom-modal
      i.close.icon
      .header Create New Classroom
      .content
        form.ui.form.segment(action='/classroom', method='POST')
          .field
            label Class Name :
            |
            input(type='text', name='course_name', placeholder='Your class name')
          .ui.grid
            .two.column.row
              .column
                .field
                  label Section :
                  |
                  input(type='text', name='section', placeholder='Your section', maxlength='2')
              .column
                .field
                  label Room :
                  |
                  input(type='text', name='room', placeholder='Your room', maxlength='4')
          .ui.grid
            .four.wide.column
              .field
                |
                label Day  :
                select.ui.dropdown.day(name='day')
                  option(value='Mon.') Monday
                  option(value='Tue.') Tuesday
                  option(value='Wed.') Wednesday
                  option(value='Thu.') Thursday
                  option(value='Fri.') Friday
                  option(value='Sat.') Saturday
                  option(value='Sun.') Sunday
            .six.wide.column(style='text-align:center;')
              b Time start
              .ui.labeled.input
                select.ui.dropdown.timeStartHh(name='time_start_hh')
                  option(value='01')  01
                  option(value='02')  02
                  option(value='03')  03
                  option(value='04')  04
                  option(value='05')  05
                  option(value='06')  06
                  option(value='07')  07
                  option(value='08')  08
                  option(value='09')  09
                  option(value='10')  10
                  option(value='11')  11
                  option(value='12')  12
                .ui.label
                  b(color='black') :
                select.ui.dropdown.timeStartMm(name='time_start_mm')
                  option(value='00')  00
                  option(value='05')  05
                  option(value='10')  10
                  option(value='15')  15
                  option(value='20')  20
                  option(value='25')  25
                  option(value='30')  30
                  option(value='35')  35
                  option(value='40')  40
                  option(value='45')  45
                  option(value='50')  50
                  option(value='55')  55
                select.ui.dropdown.timeStartAp(name='time_start_ap')
                  option(value='am.')  am.
                  option(value='pm.')  pm.
            .six.wide.column(style='text-align:center;')
              b Time end
              .ui.labeled.input
                select.ui.dropdown.timeEndHh(name='time_end_hh')
                  option(value='01')  01
                  option(value='02')  02
                  option(value='03')  03
                  option(value='04')  04
                  option(value='05')  05
                  option(value='06')  06
                  option(value='07')  07
                  option(value='08')  08
                  option(value='09')  09
                  option(value='10')  10
                  option(value='11')  11
                  option(value='12')  12
                .ui.label
                  b(color='black') :
                select.ui.dropdown.timeEndMm(name='time_end_mm')
                  option(value='00')  00
                  option(value='05')  05
                  option(value='10')  10
                  option(value='15')  15
                  option(value='20')  20
                  option(value='25')  25
                  option(value='30')  30
                  option(value='35')  35
                  option(value='40')  40
                  option(value='45')  45
                  option(value='50')  50
                  option(value='55')  55
                select.ui.dropdown.timeEndAp(name='time_end_ap')
                  option(value='am.')  am.
                  option(value='pm.')  pm.
          .ui.basic.center.aligned.segment
            .actions
              button.ui.button.approve.green(type='submit') Create
              .ui.button.cancel.red(data-value='cancel') Cancel
          .ui.error.message

    .ui.mini.modal#joinClassroom-modal
        i.close.icon
        .header Join Classroom
        .content
            form.ui.form(action='/classroom/joinClass', method='POST')
                .field
                    |
                    input(type='text', name='class_code', placeholder='Classroom code', maxlength='9')
                .ui.basic.center.aligned.segment
                    .actions
                        button.ui.button.approve.green(type='submit') Join
                        .ui.button.approve.red(data-value='cancel') Cancel

    .ui.small.modal#confirmDeleteSection
      i.close.icon
      .header Delete Section
      .content
        p#messageConfirm Are you sure to delete the section from the system?
        input.section_id(type='hidden', name='section_id')
        .ui.basic.center.aligned.segment
          .actions
            button.ui.button.approve.green.yesIamSure(onclick='onClickYes()') Yes
            .ui.button.cancel.red.noIamNotSure No

    .ui.raised.very.padded.text.container.segment
      .ui.two.column.doubling.stackable.grid.container
        .column
          h1.ui.header My Classroom
        .right.column
          a.right
            case occupation
              when 0
                button#new.ui.button.approve.green.newClassroom(style='float: right;') Create New Classroom
              default
                button#new.ui.button.approve.green.joinClassroom(style='float: right;') Join Classroom
      br
      .ui.devided.items.segment
        if sections.length > 0
          each section in sections
            if user.info.occupation === 'teacher'
                    .item(id=`${section.section_id}`, style='padding-top:2px; padding-bottom:5px;')
                        .content
                            .ui.segment
                                b(style='font-size:1.2em;')
                                    header= section.course_name
                                .description
                                    p   Section !{section.section} Room !{section.room}
                                    p   !{section.day} !{section.time_start} - !{section.time_end}
                                .extra
                                    a.ui.right.floated.alignedvertical.animated.enterToClass.button.green(href='/classroom?section_id='+section.section_id)
                                        .hidden.content Enter
                                        .visible.content
                                            i.sign.in.alternate.icon.icon
                                    a.ui.right.floated.alignedvertical.animated.deleteSection.button.red(tabindex='0', onclick='onClickDeleteSection(' + section.section_id + ', \'' + section.course_name + '\', ' + section.section + ')')
                                        .hidden.content Delete
                                        .visible.content
                                            i.trash.alternate.icon
                                    .ui.label
                                        b(style='color:black; font-size:1em;')
                                            p.right.floated.column= section.class_code

            else if user.info.occupation === 'student'
                      .item(id=`${section.section_id}`, style='padding-top:2px; padding-bottom:5px;')
                          .content
                              .ui.segment
                                  b(style='font-size:1.2em;')
                                      header= section.course_name
                                  .description
                                      p   Section !{section.section} Room !{section.room}
                                      p   !{section.day} !{section.time_start} - !{section.time_end}
                                  .extra
                                      a.ui.right.floated.primary.alignedvertical.animated.enterToClass.button(href='/classroom?section_id='+section.section_id)
                                          .hidden.content Enter
                                          .visible.content
                                              i.sign.in.alternate.icon.icon
        else
          p.text-center No classroom.
